networks:
  lan:
    external: true
    name: lan
services:
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    dns:
      - 9.9.9.9
      - 1.1.1.1
    environment:
      # Create a wireguard user with no ability to login (shell as /sbin/nologin)
      - PUID=1000
      # Utilise wireguard user group, preferably not the same as "users" but a unique group with no permissions
      - PGID=100
      - TZ=Australia/NSW
      # Change to what you require
      - SERVERURL=wg.rovacsek.com
      - SERVERPORT=51820
      # Number of QR codes to generate on init, alternatively utilise 
      # names as a comma seperated list to describe how the pub/priv key config
      # links to
      - PEERS=1
      # probably fine, but could explicitly set as a pretty standard upstream if prefered
      - PEERDNS=auto
      # Create a docker virtual or macvlan network that utilises private address space, doing this has
      # a footgun that you NEED to consider bridging networks OR explicitly define the network address of 
      # this container as shown on line 44
      - INTERNAL_SUBNET=192.168.1.0
      - ALLOWEDIPS=0.0.0.0/0
      # Generate QR codes via container logs - good ol' docker log to the rescue
      - LOG_CONFS=true
    networks:
      lan:
        ipv4_address: 192.168.1.240
    volumes:
      # Change this to prefered config mount space - this is what my home server would be
      - /mnt/zfs/containers/wireguard:/config
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

version: '3'
